{
  "contractName": "ExchangeRateOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oraclizeId",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "destroyAndSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_initialExchangeRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "LogConstructorInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "exchangeRate",
          "type": "uint256"
        }
      ],
      "name": "LogPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updatePrice",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080611253833981016040818152915160058054600160a060020a03199081163317909155600682905560008054909116736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556020808352604b908301527f436f6e7374727563746f722077617320696e697469617465642e2043616c6c20838301527f27757064617465507269636528292720746f2073656e6420746865204f72616360608301527f6c697a652051756572792e000000000000000000000000000000000000000000608083015291517f11a3fca63f87bd67d7f9f72b744acc8be2193705e7a734ac3a773d35d259e87b9181900360a00190a15061113d806101166000396000f3006080604052600436106100955763ffffffff60e060020a60003504166327dc297e811461009a57806338bbfa50146100fa5780633ba0b9a914610196578063673a7e28146101bd578063715018a6146101c557806383197ef0146101da5780638da5cb5b146101ef5780639a76efeb14610220578063d0e30db014610235578063f2fde38b1461023d578063f5074f411461025e575b600080fd5b3480156100a657600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100f895833595369560449491939091019190819084018382808284375094975061027f9650505050505050565b005b34801561010657600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526100f895833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506102e19650505050505050565b3480156101a257600080fd5b506101ab6102e6565b60408051918252519081900360200190f35b6100f86102ec565b3480156101d157600080fd5b506100f8610436565b3480156101e657600080fd5b506100f8610497565b3480156101fb57600080fd5b506102046104bc565b60408051600160a060020a039092168252519081900360200190f35b34801561022c57600080fd5b506101ab6104cb565b6100f86104d1565b34801561024957600080fd5b506100f8600160a060020a03600435166104d3565b34801561026a57600080fd5b506100f8600160a060020a03600435166104f3565b610287610516565b600160a060020a0316331461029b57600080fd5b6102a6816008610708565b600681905560408051918252517ff382320ca3328eca73b923efa9b8df7bd6ea405d6d4fa855a00db3ee406361c99181900360200190a15050565b505050565b60065481565b6040805160208082526035908201527f4f7261636c697a65207175657279207761732073656e742c207374616e64696e818301527f6720627920666f722074686520616e737765722e2e0000000000000000000000606082015290517f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e9181900360800190a16104336040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604581526020017f6a736f6e2868747470733a2f2f6170692e62696e616e63652e636f6d2f61706981526020017f2f76332f7469636b65722f70726963653f73796d626f6c3d524550455448292e81526020017f70726963650000000000000000000000000000000000000000000000000000008152506108c2565b50565b600554600160a060020a0316331461044d57600080fd5b600554604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a260058054600160a060020a0319169055565b600554600160a060020a031633146104ae57600080fd5b600554600160a060020a0316ff5b600554600160a060020a031681565b60075481565b565b600554600160a060020a031633146104ea57600080fd5b61043381610cb5565b600554600160a060020a0316331461050a57600080fd5b80600160a060020a0316ff5b60008054600160a060020a03161580610541575060005461053f90600160a060020a0316610d26565b155b15610552576105506000610d2a565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156105a457600080fd5b505af11580156105b8573d6000803e3d6000fd5b505050506040513d60208110156105ce57600080fd5b5051600154600160a060020a03908116911614610683576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b505050506040513d602081101561066157600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b600160009054906101000a9004600160a060020a0316600160a060020a031663c281d19e6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050506040513d602081101561070057600080fd5b505190505b90565b6000828180805b83518110156108a55783517f30000000000000000000000000000000000000000000000000000000000000009085908390811061074857fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156107ee575083517f3900000000000000000000000000000000000000000000000000000000000000908590839081106107b657fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561084757811561080d57851515610805576108a5565b600019909501945b600a830292506030848281518110151561082357fe5b90602001015160f860020a900460f860020a0260f860020a9004038301925061089d565b838181518110151561085557fe5b90602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916602e60f860020a02141561089d57600191505b60010161070f565b60008611156108b75785600a0a830292505b509095945050505050565b600080548190600160a060020a031615806108ef57506000546108ed90600160a060020a0316610d26565b155b15610900576108fe6000610d2a565b505b6000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561095257600080fd5b505af1158015610966573d6000803e3d6000fd5b505050506040513d602081101561097c57600080fd5b5051600154600160a060020a03908116911614610a31576000809054906101000a9004600160a060020a0316600160a060020a03166338cc48316040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b505050506040513d6020811015610a0f57600080fd5b505160018054600160a060020a031916600160a060020a039092169190911790555b6001546040517f524f3889000000000000000000000000000000000000000000000000000000008152602060048201818152875160248401528751600160a060020a039094169363524f388993899383926044909201919085019080838360005b83811015610aaa578181015183820152602001610a92565b50505050905090810190601f168015610ad75780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610af657600080fd5b505af1158015610b0a573d6000803e3d6000fd5b505050506040513d6020811015610b2057600080fd5b50519050670de0b6b3a764000062030d403a0201811115610b445760009150610cae565b6001546040517fadf59f99000000000000000000000000000000000000000000000000000000008152600060048201818152606060248401908152885160648501528851600160a060020a039095169463adf59f99948794938b938b939192909160448201916084019060208701908083838b5b83811015610bd0578181015183820152602001610bb8565b50505050905090810190601f168015610bfd5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610c30578181015183820152602001610c18565b50505050905090810190601f168015610c5d5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610c7e57600080fd5b505af1158015610c92573d6000803e3d6000fd5b50505050506040513d6020811015610ca957600080fd5b505191505b5092915050565b600160a060020a0381161515610cca57600080fd5b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360058054600160a060020a031916600160a060020a0392909216919091179055565b3b90565b6000610d34610d3a565b92915050565b600080610d5a731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610d26565b1115610dcb5760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152610dc390611062565b506001610705565b6000610dea73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610d26565b1115610e535760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152610dc390611062565b6000610e7273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610d26565b1115610edb5760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905560408051808201909152600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152610dc390611062565b6000610efa73146500cfd35b22e4a392fe0adc06de1a1368ed48610d26565b1115610f635760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152610dc390611062565b6000610f82736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610d26565b1115610fb6575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610705565b6000610fd57320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610d26565b1115611009575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610705565b60006110287351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610d26565b111561105c575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610705565b50600090565b8051611075906002906020840190611079565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110ba57805160ff19168380011785556110e7565b828001600101855582156110e7579182015b828111156110e75782518255916020019190600101906110cc565b506110f39291506110f7565b5090565b61070591905b808211156110f357600081556001016110fd5600a165627a7a72305820a4e83aa16eba3c39920ee9cf7c0aac1bccf8e0c4a07fb793e2da642c372230080029",
  "deployedBytecode": "",
  "sourceMap": "325:1807:2:-;;;863:324;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:324:2;;;;;;;;;;;;;;;;567:5:8;:18;;-1:-1:-1;;;;;;567:18:8;;;575:10;567:18;;;;919:12:2;:35;;;567:5:8;964:71:2;;;;;992:42;964:71;;;863:324;1078:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:324;325:1807;;;;;;",
  "deployedSourceMap": "325:1807:2:-;;;;;;;;;-1:-1:-1;;;325:1807:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1402:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1402:207:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1402:207:2;;-1:-1:-1;1402:207:2;;-1:-1:-1;;;;;;;1402:207:2;;;13603:146:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13603:146:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13603:146:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13603:146:3;;;;-1:-1:-1;13603:146:3;-1:-1:-1;13603:146:3;;-1:-1:-1;13603:146:3;;;;;;;;-1:-1:-1;13603:146:3;;-1:-1:-1;13603:146:3;;-1:-1:-1;;;;;;;13603:146:3;453:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;453:24:2;;;;;;;;;;;;;;;;;;;;1671:459;;;;1001:111:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:8;;;;329:66:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:66:5;;;;238:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:8;;;;;;;;-1:-1:-1;;;;;238:20:8;;;;;;;;;;;;;;483:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:25:2;;;;665:65;;;;1274:103:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:8;-1:-1:-1;;;;;1274:103:8;;;;;399:96:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;399:96:5;-1:-1:-1;;;;;399:96:5;;;;;1402:207:2;1484:20;:18;:20::i;:::-;-1:-1:-1;;;;;1470:34:2;:10;:34;1466:48;;1506:8;;;1466:48;1539:19;1548:6;1556:1;1539:8;:19::i;:::-;1524:12;:34;;;1573:29;;;;;;;;;;;;;;;;1402:207;;:::o;13603:146:3:-;;;;:::o;453:24:2:-;;;;:::o;1671:459::-;1926:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:94::i;:::-;;1671:459::o;1001:111:8:-;719:5;;-1:-1:-1;;;;;719:5:8;705:10;:19;697:28;;;;;;1077:5;;1058:25;;-1:-1:-1;;;;;1077:5:8;;;;1058:25;;1077:5;;1058:25;1089:5;:18;;-1:-1:-1;;;;;;1089:18:8;;;1001:111::o;329:66:5:-;719:5:8;;-1:-1:-1;;;;;719:5:8;705:10;:19;697:28;;;;;;384:5:5;;-1:-1:-1;;;;;384:5:5;371:19;238:20:8;;;-1:-1:-1;;;;;238:20:8;;:::o;483:25:2:-;;;;:::o;665:65::-;:::o;1274:103:8:-;719:5;;-1:-1:-1;;;;;719:5:8;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;399:96:5:-;719:5:8;;-1:-1:-1;;;;;719:5:8;705:10;:19;697:28;;;;;;479:10:5;-1:-1:-1;;;;;466:24:5;;33329:112:3;33389:7;11228:3;;-1:-1:-1;;;;;11228:3:3;11220:15;;11219:49;;-1:-1:-1;11259:3:3;;11239:25;;-1:-1:-1;;;;;11259:3:3;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;-1:-1:-1;;;;;11352:3:3;-1:-1:-1;;;;;11352:14:3;;:16;;;;;-1:-1:-1;;;11352:16:3;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11352:16:3;11339:8;;-1:-1:-1;;;;;11339:8:3;;;11331:37;;;11328:92;;11403:3;;;;;;;;;-1:-1:-1;;;;;11403:3:3;-1:-1:-1;;;;;11403:14:3;;:16;;;;;-1:-1:-1;;;11403:16:3;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11403:16:3;11382:8;:38;;-1:-1:-1;;;;;;11382:38:3;-1:-1:-1;;;;;11382:38:3;;;;;;;;;11328:92;33414:8;;;;;;;;;-1:-1:-1;;;;;33414:8:3;-1:-1:-1;;;;;33414:18:3;;:20;;;;;-1:-1:-1;;;33414:20:3;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33414:20:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33414:20:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33414:20:3;;-1:-1:-1;11431:1:3;33329:112;:::o;37565:593::-;37626:4;37671:2;37626:4;;;37738:357;37755:7;:14;37753:1;:16;37738:357;;;37794:10;;:16;;:7;;37802:1;;37794:10;;;;;;;;;;;-1:-1:-1;;;37794:10:3;;-1:-1:-1;;;37794:10:3;:16;;;;;37793:38;;;;-1:-1:-1;37814:10:3;;:16;;:7;;37822:1;;37814:10;;;;;;;;;;;-1:-1:-1;;;37814:10:3;;-1:-1:-1;;;37814:10:3;:16;;;;;37793:38;37789:295;;;37854:8;37850:102;;;37888:7;;37884:49;;;37897:5;;37884:49;-1:-1:-1;;37929:4:3;;;;37884:49;37977:2;37969:10;;;;38024:2;38010:7;38018:1;38010:10;;;;;;;;;;;;;;;-1:-1:-1;;;38010:10:3;;-1:-1:-1;;;38010:10:3;-1:-1:-1;;;38005:16:3;;:21;37997:29;;;;37789:295;;;38051:7;38059:1;38051:10;;;;;;;;;;;;;;;-1:-1:-1;;;38051:10:3;;-1:-1:-1;;;38051:10:3;:16;;;38065:2;-1:-1:-1;;;38051:16:3;;38047:37;;;38080:4;38069:15;;38047:37;37771:3;;37738:357;;;38113:1;38108:2;:6;38104:26;;;38128:2;38124;:6;38116:14;;;;38104:26;-1:-1:-1;38147:4:3;;37565:593;-1:-1:-1;;;;;37565:593:3:o;14060:306::-;14145:10;11228:3;;14145:10;;-1:-1:-1;;;;;11228:3:3;11220:15;;11219:49;;-1:-1:-1;11259:3:3;;11239:25;;-1:-1:-1;;;;;11259:3:3;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;-1:-1:-1;;;;;11352:3:3;-1:-1:-1;;;;;11352:14:3;;:16;;;;;-1:-1:-1;;;11352:16:3;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11352:16:3;11339:8;;-1:-1:-1;;;;;11339:8:3;;;11331:37;;;11328:92;;11403:3;;;;;;;;;-1:-1:-1;;;;;11403:3:3;-1:-1:-1;;;;;11403:14:3;;:16;;;;;-1:-1:-1;;;11403:16:3;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11403:16:3;11382:8;:38;;-1:-1:-1;;;;;;11382:38:3;-1:-1:-1;;;;;11382:38:3;;;;;;;;;11328:92;14179:8;;:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14179:8:3;;;;:17;;14197:10;;14179:29;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14179:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14179:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14179:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14179:29:3;;-1:-1:-1;14230:7:3;14252:6;14240:11;:18;14230:28;14222:36;;14218:50;;;14267:1;;-1:-1:-1;14260:8:3;;14218:50;14312:8;;:47;;;;;:8;:47;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14312:8:3;;;;:14;;14333:5;;14312:8;14343:10;;14355:3;;14312:47;;;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14312:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14312:47:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14312:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14312:47:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14312:47:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14312:47:3;;-1:-1:-1;11431:1:3;14060:306;;;;;:::o;1512:171:8:-;-1:-1:-1;;;;;1582:23:8;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:8;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;;;;;1661:17:8;-1:-1:-1;;;;;1661:17:8;;;;;;;;;;1512:171::o;33861:150:3:-;33977:18;;33954:51::o;11544:183::-;11607:4;11627:21;:19;:21::i;:::-;11620:28;11544:183;-1:-1:-1;;11544:183:3:o;11732:1749::-;11780:4;11855:1;11799:55;11811:42;11799:11;:55::i;:::-;:57;11795:245;;;11881:3;:71;;-1:-1:-1;;;;;;11881:71:3;11909:42;11881:71;;;11966:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;-1:-1:-1;12025:4:3;12018:11;;11795:245;12109:1;12053:55;12065:42;12053:11;:55::i;:::-;:57;12049:254;;;12143:3;:71;;-1:-1:-1;;;;;;12143:71:3;12171:42;12143:71;;;12228:39;;;;;;;;;;;;;;;;;;;:23;:39::i;12049:254::-;12372:1;12316:55;12328:42;12316:11;:55::i;:::-;:57;12312:249;;;12404:3;:71;;-1:-1:-1;;;;;;12404:71:3;12432:42;12404:71;;;12489:36;;;;;;;;;;;;;;;;;;;:23;:36::i;12312:249::-;12630:1;12574:55;12586:42;12574:11;:55::i;:::-;:57;12570:253;;;12664:3;:71;;-1:-1:-1;;;;;;12664:71:3;12692:42;12664:71;;;12749:38;;;;;;;;;;;;;;;;;;;:23;:38::i;12570:253::-;12892:1;12836:55;12848:42;12836:11;:55::i;:::-;:57;12832:201;;;-1:-1:-1;12926:3:3;:71;;-1:-1:-1;;;;;;12926:71:3;12954:42;12926:71;;;;13011:11;;12832:201;13102:1;13046:55;13058:42;13046:11;:55::i;:::-;:57;13042:200;;;-1:-1:-1;13135:3:3;:71;;-1:-1:-1;;;;;;13135:71:3;13163:42;13135:71;;;;13220:11;;13042:200;13311:1;13255:55;13267:42;13255:11;:55::i;:::-;:57;13251:202;;;-1:-1:-1;13346:3:3;:71;;-1:-1:-1;;;;;;13346:71:3;13374:42;13346:71;;;;13431:11;;13251:202;-1:-1:-1;13469:5:3;11732:1749;:::o;39326:118::-;39400:37;;;;:21;;:37;;;;;:::i;:::-;;39326:118;:::o;325:1807:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:1807:2;;;-1:-1:-1;325:1807:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./oraclize/usingOraclize.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/lifecycle/Destructible.sol\";\n\n/**\n * @title ExchangeRateOracle\n * @dev The ExchangeRateOracle contract provides the current exchange rate from Ether to MTK\n */\ncontract ExchangeRateOracle is usingOraclize, Destructible {\n\n    using SafeMath for uint256;\n    using SafeMath for uint;\n\n    uint public exchangeRate;\n    bytes32 public oraclizeId;\n\n    event LogConstructorInitiated(string message);\n    event LogPriceUpdated(uint exchangeRate);\n    event LogNewOraclizeQuery(string description);\n\n\n    function deposit() external payable {\n        // do nothing\n    }\n\n    /**\n    * @dev Initialises new oracle with the initial exchange rate and the Oracle Address Resolver for debugging\n    */ \n    constructor(uint _initialExchangeRate) public {\n        exchangeRate = _initialExchangeRate;\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n\n        // updatePrice();\n\n        emit LogConstructorInitiated(\"Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query.\");\n    }\n\n    /**\n    * @dev the callback function is called when the oracle provides the requested information\n    * @param id the id for the specific update request\n    * @param result the result of the query\n    */ \n    function __callback(bytes32 id, string result) public {\n        if (msg.sender != oraclize_cbAddress()) revert();\n        exchangeRate = parseInt(result, 8);\n        emit LogPriceUpdated(exchangeRate);\n    }\n\n    /**\n     * @dev initialised an price update\n     */\n    function updatePrice() public payable {\n        // if (oraclize_getPrice(\"URL\") > this.balance) {\n        //     emit LogNewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\n        // } else {\n            emit LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\n            oraclize_query(\"URL\", \"json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price\");\n        // }\n    }\n}",
  "sourcePath": "/Users/danny/Dev/Projects/crypto/consensys/bounty-dapp/contracts/ExchangeRateOracle.sol",
  "ast": {
    "absolutePath": "/Users/danny/Dev/Projects/crypto/consensys/bounty-dapp/contracts/ExchangeRateOracle.sol",
    "exportedSymbols": {
      "ExchangeRateOracle": [
        829
      ]
    },
    "id": 830,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 734,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/danny/Dev/Projects/crypto/consensys/bounty-dapp/contracts/oraclize/usingOraclize.sol",
        "file": "./oraclize/usingOraclize.sol",
        "id": 735,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 6838,
        "src": "26:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 736,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 7050,
        "src": "65:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "id": 737,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 6896,
        "src": "125:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 738,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6837,
              "src": "356:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6837",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 739,
            "nodeType": "InheritanceSpecifier",
            "src": "356:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 740,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6895,
              "src": "371:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$6895",
                "typeString": "contract Destructible"
              }
            },
            "id": 741,
            "nodeType": "InheritanceSpecifier",
            "src": "371:12:2"
          }
        ],
        "contractDependencies": [
          6837,
          6895,
          7135
        ],
        "contractKind": "contract",
        "documentation": "@title ExchangeRateOracle\n@dev The ExchangeRateOracle contract provides the current exchange rate from Ether to MTK",
        "fullyImplemented": true,
        "id": 829,
        "linearizedBaseContracts": [
          829,
          6895,
          7135,
          6837
        ],
        "name": "ExchangeRateOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 744,
            "libraryName": {
              "contractScope": null,
              "id": 742,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7049,
              "src": "397:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7049",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "391:27:2",
            "typeName": {
              "id": 743,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "410:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 747,
            "libraryName": {
              "contractScope": null,
              "id": 745,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7049,
              "src": "429:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7049",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "423:24:2",
            "typeName": {
              "id": 746,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "442:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 749,
            "name": "exchangeRate",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "453:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 748,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "453:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 751,
            "name": "oraclizeId",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "483:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 750,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 755,
            "name": "LogConstructorInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "545:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:16:2"
            },
            "src": "515:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 759,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "indexed": false,
                  "name": "exchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "588:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "587:19:2"
            },
            "src": "566:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 763,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "638:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:20:2"
            },
            "src": "612:46:2"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "701:29:2",
              "statements": []
            },
            "documentation": null,
            "id": 767,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:0:2"
            },
            "scope": 829,
            "src": "665:65:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "909:278:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 772,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "919:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "name": "_initialExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "934:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "919:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "919:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 776,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "964:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "992:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 777,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$947_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "964:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "964:71:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f722077617320696e697469617465642e2043616c6c2027757064617465507269636528292720746f2073656e6420746865204f7261636c697a652051756572792e",
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:77:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177c4e42460ccb50642b55c84db9c041bd54f40ccbc1f08e7a9ab4b87b65b86f",
                          "typeString": "literal_string \"Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query.\""
                        },
                        "value": "Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_177c4e42460ccb50642b55c84db9c041bd54f40ccbc1f08e7a9ab4b87b65b86f",
                          "typeString": "literal_string \"Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query.\""
                        }
                      ],
                      "id": 782,
                      "name": "LogConstructorInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "1078:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "EmitStatement",
                  "src": "1073:107:2"
                }
              ]
            },
            "documentation": "@dev Initialises new oracle with the initial exchange rate and the Oracle Address Resolver for debugging",
            "id": 787,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "name": "_initialExchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "875:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:2"
            },
            "scope": 829,
            "src": "863:324:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "1456:153:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "1470:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1470:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 796,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4810,
                        "src": "1484:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1484:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1470:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 802,
                  "nodeType": "IfStatement",
                  "src": "1466:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 799,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          7709,
                          7710
                        ],
                        "referencedDeclaration": 7709,
                        "src": "1506:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1506:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 801,
                    "nodeType": "ExpressionStatement",
                    "src": "1506:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 803,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1524:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 805,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "1548:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "38",
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1556:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 804,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5488,
                          5587
                        ],
                        "referencedDeclaration": 5587,
                        "src": "1539:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1539:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:34:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "1589:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 810,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "1573:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "EmitStatement",
                  "src": "1568:34:2"
                }
              ]
            },
            "documentation": "@dev the callback function is called when the oracle provides the requested information\n@param id the id for the specific update request\n@param result the result of the query",
            "id": 815,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1422:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1434:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1421:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:0:2"
            },
            "scope": 829,
            "src": "1402:207:2",
            "stateMutability": "nonpayable",
            "superFunction": 1752,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "1709:421:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 818,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "1926:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "EmitStatement",
                  "src": "1921:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2031:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e62696e616e63652e636f6d2f6170692f76332f7469636b65722f70726963653f73796d626f6c3d524550455448292e7072696365",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2038:71:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f37359ef75a63fbaa70806feb03a948a7e98e67255a08f6c2ffb3e628b7014e",
                          "typeString": "literal_string \"json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price\""
                        },
                        "value": "json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f37359ef75a63fbaa70806feb03a948a7e98e67255a08f6c2ffb3e628b7014e",
                          "typeString": "literal_string \"json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price\""
                        }
                      ],
                      "id": 822,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1842,
                        1884,
                        1930,
                        1974,
                        2017,
                        2062,
                        2111,
                        2158,
                        2205,
                        2254,
                        2307,
                        2358,
                        2395,
                        2435,
                        2478,
                        2518,
                        2563,
                        2611,
                        2662,
                        2710,
                        2763,
                        2819,
                        2878,
                        2934,
                        2995,
                        3059,
                        3126,
                        3190,
                        3259,
                        3331,
                        3406,
                        3478,
                        3525,
                        3574,
                        3627,
                        3678,
                        3715,
                        3755,
                        3798,
                        3838,
                        3883,
                        3931,
                        3982,
                        4030,
                        4083,
                        4139,
                        4198,
                        4254,
                        4315,
                        4379,
                        4446,
                        4510,
                        4579,
                        4651,
                        4726,
                        4798
                      ],
                      "referencedDeclaration": 1842,
                      "src": "2016:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:94:2"
                }
              ]
            },
            "documentation": "@dev initialised an price update",
            "id": 828,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1691:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:2"
            },
            "scope": 829,
            "src": "1671:459:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 830,
        "src": "325:1807:2"
      }
    ],
    "src": "0:2132:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/danny/Dev/Projects/crypto/consensys/bounty-dapp/contracts/ExchangeRateOracle.sol",
    "exportedSymbols": {
      "ExchangeRateOracle": [
        829
      ]
    },
    "id": 830,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 734,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/danny/Dev/Projects/crypto/consensys/bounty-dapp/contracts/oraclize/usingOraclize.sol",
        "file": "./oraclize/usingOraclize.sol",
        "id": 735,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 6838,
        "src": "26:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 736,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 7050,
        "src": "65:59:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Destructible.sol",
        "id": 737,
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 6896,
        "src": "125:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 738,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6837,
              "src": "356:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6837",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 739,
            "nodeType": "InheritanceSpecifier",
            "src": "356:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 740,
              "name": "Destructible",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6895,
              "src": "371:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Destructible_$6895",
                "typeString": "contract Destructible"
              }
            },
            "id": 741,
            "nodeType": "InheritanceSpecifier",
            "src": "371:12:2"
          }
        ],
        "contractDependencies": [
          6837,
          6895,
          7135
        ],
        "contractKind": "contract",
        "documentation": "@title ExchangeRateOracle\n@dev The ExchangeRateOracle contract provides the current exchange rate from Ether to MTK",
        "fullyImplemented": true,
        "id": 829,
        "linearizedBaseContracts": [
          829,
          6895,
          7135,
          6837
        ],
        "name": "ExchangeRateOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 744,
            "libraryName": {
              "contractScope": null,
              "id": 742,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7049,
              "src": "397:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7049",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "391:27:2",
            "typeName": {
              "id": 743,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "410:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 747,
            "libraryName": {
              "contractScope": null,
              "id": 745,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7049,
              "src": "429:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7049",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "423:24:2",
            "typeName": {
              "id": 746,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "442:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 749,
            "name": "exchangeRate",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "453:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 748,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "453:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 751,
            "name": "oraclizeId",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "483:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 750,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 755,
            "name": "LogConstructorInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "545:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:16:2"
            },
            "src": "515:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 759,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "indexed": false,
                  "name": "exchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "588:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "587:19:2"
            },
            "src": "566:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 763,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "638:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:20:2"
            },
            "src": "612:46:2"
          },
          {
            "body": {
              "id": 766,
              "nodeType": "Block",
              "src": "701:29:2",
              "statements": []
            },
            "documentation": null,
            "id": 767,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:0:2"
            },
            "scope": 829,
            "src": "665:65:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "909:278:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 772,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "919:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 773,
                      "name": "_initialExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "934:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "919:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "919:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 776,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "964:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "992:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 777,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "970:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$947_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "970:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "964:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$947",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "964:71:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f722077617320696e697469617465642e2043616c6c2027757064617465507269636528292720746f2073656e6420746865204f7261636c697a652051756572792e",
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:77:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177c4e42460ccb50642b55c84db9c041bd54f40ccbc1f08e7a9ab4b87b65b86f",
                          "typeString": "literal_string \"Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query.\""
                        },
                        "value": "Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_177c4e42460ccb50642b55c84db9c041bd54f40ccbc1f08e7a9ab4b87b65b86f",
                          "typeString": "literal_string \"Constructor was initiated. Call 'updatePrice()' to send the Oraclize Query.\""
                        }
                      ],
                      "id": 782,
                      "name": "LogConstructorInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "1078:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 785,
                  "nodeType": "EmitStatement",
                  "src": "1073:107:2"
                }
              ]
            },
            "documentation": "@dev Initialises new oracle with the initial exchange rate and the Oracle Address Resolver for debugging",
            "id": 787,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "name": "_initialExchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "875:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "874:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:2"
            },
            "scope": 829,
            "src": "863:324:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "1456:153:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "1470:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1470:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 796,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4810,
                        "src": "1484:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1484:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1470:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 802,
                  "nodeType": "IfStatement",
                  "src": "1466:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 799,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          7709,
                          7710
                        ],
                        "referencedDeclaration": 7709,
                        "src": "1506:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1506:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 801,
                    "nodeType": "ExpressionStatement",
                    "src": "1506:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 803,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1524:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 805,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "1548:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "38",
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1556:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 804,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5488,
                          5587
                        ],
                        "referencedDeclaration": 5587,
                        "src": "1539:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1539:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:34:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "1589:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 810,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "1573:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "EmitStatement",
                  "src": "1568:34:2"
                }
              ]
            },
            "documentation": "@dev the callback function is called when the oracle provides the requested information\n@param id the id for the specific update request\n@param result the result of the query",
            "id": 815,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1422:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "1434:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1421:27:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:0:2"
            },
            "scope": 829,
            "src": "1402:207:2",
            "stateMutability": "nonpayable",
            "superFunction": 1752,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "1709:421:2",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1946:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 818,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "1926:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "EmitStatement",
                  "src": "1921:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2031:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e62696e616e63652e636f6d2f6170692f76332f7469636b65722f70726963653f73796d626f6c3d524550455448292e7072696365",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2038:71:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f37359ef75a63fbaa70806feb03a948a7e98e67255a08f6c2ffb3e628b7014e",
                          "typeString": "literal_string \"json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price\""
                        },
                        "value": "json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f37359ef75a63fbaa70806feb03a948a7e98e67255a08f6c2ffb3e628b7014e",
                          "typeString": "literal_string \"json(https://api.binance.com/api/v3/ticker/price?symbol=REPETH).price\""
                        }
                      ],
                      "id": 822,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1842,
                        1884,
                        1930,
                        1974,
                        2017,
                        2062,
                        2111,
                        2158,
                        2205,
                        2254,
                        2307,
                        2358,
                        2395,
                        2435,
                        2478,
                        2518,
                        2563,
                        2611,
                        2662,
                        2710,
                        2763,
                        2819,
                        2878,
                        2934,
                        2995,
                        3059,
                        3126,
                        3190,
                        3259,
                        3331,
                        3406,
                        3478,
                        3525,
                        3574,
                        3627,
                        3678,
                        3715,
                        3755,
                        3798,
                        3838,
                        3883,
                        3931,
                        3982,
                        4030,
                        4083,
                        4139,
                        4198,
                        4254,
                        4315,
                        4379,
                        4446,
                        4510,
                        4579,
                        4651,
                        4726,
                        4798
                      ],
                      "referencedDeclaration": 1842,
                      "src": "2016:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:94:2"
                }
              ]
            },
            "documentation": "@dev initialised an price update",
            "id": 828,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1691:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:2"
            },
            "scope": 829,
            "src": "1671:459:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 830,
        "src": "325:1807:2"
      }
    ],
    "src": "0:2132:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x2fae88244422b7c334016af11c68d0c4ce8bec30",
      "transactionHash": "0x3a4b274aa25332c029afb6468d34e9c329d72049493fef3bbd93fa40f41ff675"
    },
    "4447": {
      "events": {},
      "links": {},
      "address": "0x62227531b82259561cc9ad4413188f08e536598a",
      "transactionHash": "0xf1160413ac8259dcb61e964a50e0d0f205cce912efcac8e183bab0af24f89277"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-28T12:01:22.220Z"
}